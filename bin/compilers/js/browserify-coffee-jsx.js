// Generated by CoffeeScript 1.7.1
(function() {
  var CoffeeJSXCompiler, Compiler, React, browserify, coffee_reactify, fs,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  fs = require('fs');

  browserify = require('browserify');

  coffee_reactify = require('coffee-reactify');

  React = require('react');

  require('node-cjsx').transform();

  Compiler = require('metaserve/src/compiler');

  CoffeeJSXCompiler = (function(_super) {
    __extends(CoffeeJSXCompiler, _super);

    function CoffeeJSXCompiler() {
      return CoffeeJSXCompiler.__super__.constructor.apply(this, arguments);
    }

    CoffeeJSXCompiler.prototype.default_options = {
      base_dir: './static/js',
      ext: 'coffee',
      browserify_options: {
        extensions: ['.coffee']
      }
    };

    CoffeeJSXCompiler.prototype.compile = function(coffee_filename) {
      var options;
      options = this.options;
      return function(req, res, next) {
        var bundler, e;
        try {
          console.log('[coffee/JSX Compiler] Going to compile ' + coffee_filename);
          bundler = browserify(options.browserify_options);
          bundler.transform(coffee_reactify);
          return bundler.add(coffee_filename).bundle().pipe(res);
        } catch (_error) {
          e = _error;
          console.log('[coffee/JSX Compiler] ERROR ' + e);
          return res.send(500, e.toString());
        }
      };
    };

    return CoffeeJSXCompiler;

  })(Compiler);

  module.exports = function(options) {
    if (options == null) {
      options = {};
    }
    return new CoffeeJSXCompiler(options);
  };

}).call(this);
